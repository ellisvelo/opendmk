/*
 * @(#)SNMP_USER_BASED_SM_MIBOidTable.java	1.11
 *
 * 
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 * 
 * Copyright (c) 2007 Sun Microsystems, Inc. All Rights Reserved.
 * 
 * The contents of this file are subject to the terms of either the GNU General
 * Public License Version 2 only ("GPL") or the Common Development and
 * Distribution License("CDDL")(collectively, the "License"). You may not use
 * this file except in compliance with the License. You can obtain a copy of the
 * License at http://opendmk.dev.java.net/legal_notices/licenses.txt or in the 
 * LEGAL_NOTICES folder that accompanied this code. See the License for the 
 * specific language governing permissions and limitations under the License.
 * 
 * When distributing the software, include this License Header Notice in each
 * file and include the License file found at
 *     http://opendmk.dev.java.net/legal_notices/licenses.txt
 * or in the LEGAL_NOTICES folder that accompanied this code.
 * Sun designates this particular file as subject to the "Classpath" exception
 * as provided by Sun in the GPL Version 2 section of the License file that
 * accompanied this code.
 * 
 * If applicable, add the following below the License Header, with the fields
 * enclosed by brackets [] replaced by your own identifying information:
 * 
 *       "Portions Copyrighted [year] [name of copyright owner]"
 * 
 * Contributor(s):
 * 
 * If you wish your version of this file to be governed by only the CDDL or
 * only the GPL Version 2, indicate your decision by adding
 * 
 *       "[Contributor] elects to include this software in this distribution
 *        under the [CDDL or GPL Version 2] license."
 * 
 * If you don't indicate a single choice of license, a recipient has the option
 * to distribute your version of this file under either the CDDL or the GPL
 * Version 2, or to extend the choice of license to its licensees as provided
 * above. However, if you add GPL Version 2 code and therefore, elected the
 * GPL Version 2 license, then the option applies only if the new code is made
 * subject to such option by the copyright holder.
 * 
 *
 */
package com.sun.management.snmp.usm.usmmib;

//
// Generated by mibgen version 5.0 (09/06/01) when compiling SNMP-USER-BASED-SM-MIB.
//

// java imports
//
import java.io.Serializable;

// jmx imports
//
import com.sun.management.snmp.SnmpOidRecord;

// jdmk imports
//
import com.sun.management.snmp.SnmpOidTableSupport;

/**
 * The class contains metadata definitions for "SNMP-USER-BASED-SM-MIB".
 * Call SnmpOid.setSnmpOidTable(new SNMP_USER_BASED_SM_MIBOidTable()) to load the metadata in the SnmpOidTable.
 *
 * @since Java DMK 5.1
 */
public class SNMP_USER_BASED_SM_MIBOidTable extends SnmpOidTableSupport implements Serializable {
    private static final long serialVersionUID = 3927442641260724419L;

    /**
     * Default constructor. Initialize the Mib tree.
     */
    public SNMP_USER_BASED_SM_MIBOidTable() {
        super("SNMP_USER_BASED_SM_MIB");
        loadMib(varList);
    }

    static SnmpOidRecord varList [] = {
        new SnmpOidRecord("usmUserTable", "1.3.6.1.6.3.15.1.2.2", "TA"),
        new SnmpOidRecord("usmUserEntry", "1.3.6.1.6.3.15.1.2.2.1", "EN"),
        new SnmpOidRecord("usmUserPrivKeyChange", "1.3.6.1.6.3.15.1.2.2.1.9", "S"),
        new SnmpOidRecord("usmUserPrivProtocol", "1.3.6.1.6.3.15.1.2.2.1.8", "OI"),
        new SnmpOidRecord("usmUserOwnAuthKeyChange", "1.3.6.1.6.3.15.1.2.2.1.7", "S"),
        new SnmpOidRecord("usmUserAuthKeyChange", "1.3.6.1.6.3.15.1.2.2.1.6", "S"),
        new SnmpOidRecord("usmUserAuthProtocol", "1.3.6.1.6.3.15.1.2.2.1.5", "OI"),
        new SnmpOidRecord("usmUserCloneFrom", "1.3.6.1.6.3.15.1.2.2.1.4", "OI"),
        new SnmpOidRecord("usmUserStatus", "1.3.6.1.6.3.15.1.2.2.1.13", "I"),
        new SnmpOidRecord("usmUserStorageType", "1.3.6.1.6.3.15.1.2.2.1.12", "I"),
        new SnmpOidRecord("usmUserSecurityName", "1.3.6.1.6.3.15.1.2.2.1.3", "S"),
        new SnmpOidRecord("usmUserName", "1.3.6.1.6.3.15.1.2.2.1.2", "S"),
        new SnmpOidRecord("usmUserPublic", "1.3.6.1.6.3.15.1.2.2.1.11", "S"),
        new SnmpOidRecord("usmUserEngineID", "1.3.6.1.6.3.15.1.2.2.1.1", "S"),
        new SnmpOidRecord("usmUserOwnPrivKeyChange", "1.3.6.1.6.3.15.1.2.2.1.10", "S"),
        new SnmpOidRecord("usmUserSpinLock", "1.3.6.1.6.3.15.1.2.1", "I"),
        new SnmpOidRecord("usmStatsDecryptionErrors", "1.3.6.1.6.3.15.1.1.6", "C"),
        new SnmpOidRecord("usmStatsWrongDigests", "1.3.6.1.6.3.15.1.1.5", "C"),
        new SnmpOidRecord("usmStatsUnknownEngineIDs", "1.3.6.1.6.3.15.1.1.4", "C"),
        new SnmpOidRecord("usmStatsUnknownUserNames", "1.3.6.1.6.3.15.1.1.3", "C"),
        new SnmpOidRecord("usmStatsNotInTimeWindows", "1.3.6.1.6.3.15.1.1.2", "C"),
        new SnmpOidRecord("usmStatsUnsupportedSecLevels", "1.3.6.1.6.3.15.1.1.1", "C"),
        new SnmpOidRecord("usmNoPrivProtocol", "1.3.6.1.6.3.10.1.2.1", "ID"),
        new SnmpOidRecord("usmHMACMD5AuthProtocol", "1.3.6.1.6.3.10.1.1.2", "ID"),
        new SnmpOidRecord("usmDESPrivProtocol", "1.3.6.1.6.3.10.1.2.2", "ID"),
        new SnmpOidRecord("usmHMACSHAAuthProtocol", "1.3.6.1.6.3.10.1.1.3", "ID"),
        new SnmpOidRecord("usmNoAuthProtocol", "1.3.6.1.6.3.10.1.1.1", "ID")    };
}
