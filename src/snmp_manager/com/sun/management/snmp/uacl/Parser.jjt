/*
 * @(#)file      Parser.jjt
 * @(#)author    Sun Microsystems, Inc.
 * @(#)version   4.4
 * @(#)date      01/01/17
 *
 * 
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 * 
 * Copyright (c) 2007 Sun Microsystems, Inc. All Rights Reserved.
 * 
 * The contents of this file are subject to the terms of either the GNU General
 * Public License Version 2 only ("GPL") or the Common Development and
 * Distribution License("CDDL")(collectively, the "License"). You may not use
 * this file except in compliance with the License. You can obtain a copy of the
 * License at http://opendmk.dev.java.net/legal_notices/licenses.txt or in the 
 * LEGAL_NOTICES folder that accompanied this code. See the License for the 
 * specific language governing permissions and limitations under the License.
 * 
 * When distributing the software, include this License Header Notice in each
 * file and include the License file found at
 *     http://opendmk.dev.java.net/legal_notices/licenses.txt
 * or in the LEGAL_NOTICES folder that accompanied this code.
 * Sun designates this particular file as subject to the "Classpath" exception
 * as provided by Sun in the GPL Version 2 section of the License file that
 * accompanied this code.
 * 
 * If applicable, add the following below the License Header, with the fields
 * enclosed by brackets [] replaced by your own identifying information:
 * 
 *       "Portions Copyrighted [year] [name of copyright owner]"
 * 
 * Contributor(s):
 * 
 * If you wish your version of this file to be governed by only the CDDL or
 * only the GPL Version 2, indicate your decision by adding
 * 
 *       "[Contributor] elects to include this software in this distribution
 *        under the [CDDL or GPL Version 2] license."
 * 
 * If you don't indicate a single choice of license, a recipient has the option
 * to distribute your version of this file under either the CDDL or the GPL
 * Version 2, or to extend the choice of license to its licensees as provided
 * above. However, if you add GPL Version 2 code and therefore, elected the
 * GPL Version 2 license, then the option applies only if the new code is made
 * subject to such option by the copyright holder.
 * 
 *
 */

options {
  MULTI=true;
  STATIC=false;
  NODE_PREFIX= "JDM";
  NODE_PACKAGE="com.sun.management.snmp.uacl";
}


PARSER_BEGIN(Parser)

package com.sun.management.snmp.uacl;

import java.io.*;

public class Parser {
}

PARSER_END(Parser)


SKIP :
{
  " "
| "\t"
| "\n"
| "\r"
| <"--" (~["\n","\r"])* ("\n"|"\r"|"\r\n")>
| <"#" (~["\n","\r"])* ("\n"|"\r"|"\r\n")>

}



/* RESERVED WORDS AND LITERALS */

TOKEN : 
{
  <ACCESS: "access">
| <ACL: "acl">
| <ASSIGN: "=">
| <CONTEXTNAMES: "context-names">
| <USERS: "users">
| <LBRACE: "{">
| <RANGE: "-">
| <RBRACE: "}">
| <RO: "read-only">
| <RW: "read-write">
| <SECURITYLEVEL: "security-level">
| <NOAUTHNOPRIV: "noAuthNoPriv">
| <AUTHNOPRIV: "authNoPriv">
| <AUTHPRIV: "authPriv">
}

TOKEN : /* LITERALS */
{
  < INTEGER_LITERAL:
        <DECIMAL_LITERAL> (["l","L"])?
      | <HEX_LITERAL> (["l","L"])?
      | <OCTAL_LITERAL> (["l","L"])?
  >
|
  < #DECIMAL_LITERAL: ["1"-"9"] (["0"-"9"])* >
|
  < #HEX_LITERAL: "0" ["x","X"] (["0"-"9","a"-"f","A"-"F"])+ >
|      
  < #OCTAL_LITERAL: "0" (["0"-"7"])* >
}
 
TOKEN : /* IDENTIFIERS */
{
  < IDENTIFIER: (<LETTER> (<SEPARATOR>|<LETTER>|<DIGIT>)*) | <ANY_USER> >
|
  < #LETTER: ["a"-"z","A"-"Z"] >
|
  < #SEPARATOR: ["-", "_"] >
|
  < #DIGIT: ["0"-"9"] >
|
  < #ANY_USER: ["*"] >
|
 <CSTRING: "\"" (~["\""])* "\"">
}

 

TOKEN: /* SEPARATOR */
{
  < COMMA: "," >
| < DOT: "." >
| < MARK: "!" >
}

// A file can contain several acl definitions
//
JDMSecurityDefs SecurityDefs()  : {}
{
  [AclBlock()]
  <EOF>
  { return jjtThis;}
}

void AclBlock(): {}
{
"acl" "=" "{" (AclItem())+ "}"
}

void AclItem(): {}
{
"{" jjtThis.com= ContextNames() jjtThis.access= Access() jjtThis.lev= SecurityLevel() Users() "}"
}

JDMContextNames ContextNames(): {}
{
"context-names" "=" ContextName() ( "," ContextName())*

{return jjtThis;}

}

void ContextName(): 
{
  Token t;
}
{
t=<IDENTIFIER> {jjtThis.contextName= t.image;}
}

JDMUsers Users(): {}
{
"users" "=" User() ( "," User())*

{return jjtThis;}

}

void User(): 
{
  Token t;
}
{
t=<IDENTIFIER> {jjtThis.userName= t.image;}
}

JDMAccess Access(): {}
{
"access" "=" ( <RO> {jjtThis.access= RO;}
              |
               <RW> {jjtThis.access= RW;}
             )
{return jjtThis;}
}

JDMSecurityLevel SecurityLevel(): {}
{
"security-level" "=" ( <NOAUTHNOPRIV> {jjtThis.securityLevel = 0;}
	      |	
		<AUTHNOPRIV> {jjtThis.securityLevel = 1;}
	      |
		<AUTHPRIV> {jjtThis.securityLevel = 3;}
             )
{return jjtThis;}
}
